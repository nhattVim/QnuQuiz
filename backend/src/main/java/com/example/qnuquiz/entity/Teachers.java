package com.example.qnuquiz.entity;
// Generated Oct 12, 2025, 7:49:47â€¯PM by Hibernate Tools 7.1.3.Final

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.UniqueConstraint;
import java.sql.Timestamp;

/**
 * Teachers generated by hbm2java
 */
@Entity
@Table(name = "teachers", schema = "public", catalog = "defaultdb", uniqueConstraints = {
        @UniqueConstraint(columnNames = "teacher_code"), @UniqueConstraint(columnNames = "user_id") })
public class Teachers implements java.io.Serializable {

    private long id;
    private Users users;
    private Departments departments;
    private String teacherCode;
    private String title;
    private Timestamp createdAt;

    public Teachers() {
    }

    public Teachers(long id, Users users, Timestamp createdAt) {
        this.id = id;
        this.users = users;
        this.createdAt = createdAt;
    }

    public Teachers(long id, Users users, Departments departments, String teacherCode, String title,
            Timestamp createdAt) {
        this.id = id;
        this.users = users;
        this.departments = departments;
        this.teacherCode = teacherCode;
        this.title = title;
        this.createdAt = createdAt;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "user_id", unique = true, nullable = false)
    public Users getUsers() {
        return this.users;
    }

    public void setUsers(Users users) {
        this.users = users;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "department_id")
    public Departments getDepartments() {
        return this.departments;
    }

    public void setDepartments(Departments departments) {
        this.departments = departments;
    }

    @Column(name = "teacher_code", unique = true, length = 64)
    public String getTeacherCode() {
        return this.teacherCode;
    }

    public void setTeacherCode(String teacherCode) {
        this.teacherCode = teacherCode;
    }

    @Column(name = "title", length = 128)
    public String getTitle() {
        return this.title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created_at", nullable = false, length = 35)
    public Timestamp getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(Timestamp createdAt) {
        this.createdAt = createdAt;
    }

}
