package com.example.qnuquiz.entity;
// Generated Oct 12, 2025, 7:49:47â€¯PM by Hibernate Tools 7.1.3.Final

import jakarta.persistence.AttributeOverride;
import jakarta.persistence.AttributeOverrides;
import jakarta.persistence.Column;
import jakarta.persistence.EmbeddedId;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import java.math.BigDecimal;

/**
 * ExamQuestions generated by hbm2java
 */
@Entity
@Table(name = "exam_questions", schema = "public", catalog = "defaultdb")
public class ExamQuestions implements java.io.Serializable {

    private ExamQuestionsId id;
    private Exams exams;
    private Questions questions;
    private Integer ordering;
    private BigDecimal points;

    public ExamQuestions() {
    }

    public ExamQuestions(ExamQuestionsId id, Exams exams, Questions questions) {
        this.id = id;
        this.exams = exams;
        this.questions = questions;
    }

    public ExamQuestions(ExamQuestionsId id, Exams exams, Questions questions, Integer ordering, BigDecimal points) {
        this.id = id;
        this.exams = exams;
        this.questions = questions;
        this.ordering = ordering;
        this.points = points;
    }

    @EmbeddedId

    @AttributeOverrides({
            @AttributeOverride(name = "examId", column = @Column(name = "exam_id", nullable = false)),
            @AttributeOverride(name = "questionId", column = @Column(name = "question_id", nullable = false)) })
    public ExamQuestionsId getId() {
        return this.id;
    }

    public void setId(ExamQuestionsId id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "exam_id", nullable = false, insertable = false, updatable = false)
    public Exams getExams() {
        return this.exams;
    }

    public void setExams(Exams exams) {
        this.exams = exams;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "question_id", nullable = false, insertable = false, updatable = false)
    public Questions getQuestions() {
        return this.questions;
    }

    public void setQuestions(Questions questions) {
        this.questions = questions;
    }

    @Column(name = "ordering")
    public Integer getOrdering() {
        return this.ordering;
    }

    public void setOrdering(Integer ordering) {
        this.ordering = ordering;
    }

    @Column(name = "points", precision = 6, scale = 2)
    public BigDecimal getPoints() {
        return this.points;
    }

    public void setPoints(BigDecimal points) {
        this.points = points;
    }

}
