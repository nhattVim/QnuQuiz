package com.example.qnuquiz.entity;
// Generated Oct 12, 2025, 7:49:47â€¯PM by Hibernate Tools 7.1.3.Final

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import java.sql.Timestamp;
import java.util.HashSet;
import java.util.Set;

/**
 * QuestionOptions generated by hbm2java
 */
@Entity
@Table(name = "question_options", schema = "public", catalog = "defaultdb")
public class QuestionOptions implements java.io.Serializable {

    private long id;
    private Questions questions;
    private String content;
    private boolean isCorrect;
    private Integer position;
    private Timestamp createdAt;
    private Set<ExamAnswers> examAnswerses = new HashSet<ExamAnswers>(0);

    public QuestionOptions() {
    }

    public QuestionOptions(long id, Questions questions, String content, boolean isCorrect, Timestamp createdAt) {
        this.id = id;
        this.questions = questions;
        this.content = content;
        this.isCorrect = isCorrect;
        this.createdAt = createdAt;
    }

    public QuestionOptions(long id, Questions questions, String content, boolean isCorrect, Integer position,
            Timestamp createdAt, Set<ExamAnswers> examAnswerses) {
        this.id = id;
        this.questions = questions;
        this.content = content;
        this.isCorrect = isCorrect;
        this.position = position;
        this.createdAt = createdAt;
        this.examAnswerses = examAnswerses;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "question_id", nullable = false)
    public Questions getQuestions() {
        return this.questions;
    }

    public void setQuestions(Questions questions) {
        this.questions = questions;
    }

    @Column(name = "content", nullable = false)
    public String getContent() {
        return this.content;
    }

    public void setContent(String content) {
        this.content = content;
    }

    @Column(name = "is_correct", nullable = false)
    public boolean isIsCorrect() {
        return this.isCorrect;
    }

    public void setIsCorrect(boolean isCorrect) {
        this.isCorrect = isCorrect;
    }

    @Column(name = "position")
    public Integer getPosition() {
        return this.position;
    }

    public void setPosition(Integer position) {
        this.position = position;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created_at", nullable = false, length = 35)
    public Timestamp getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(Timestamp createdAt) {
        this.createdAt = createdAt;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "questionOptions")
    public Set<ExamAnswers> getExamAnswerses() {
        return this.examAnswerses;
    }

    public void setExamAnswerses(Set<ExamAnswers> examAnswerses) {
        this.examAnswerses = examAnswerses;
    }

}
