package com.example.qnuquiz.entity;
// Generated Oct 12, 2025, 7:49:47â€¯PM by Hibernate Tools 7.1.3.Final

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import java.sql.Timestamp;

/**
 * Feedbacks generated by hbm2java
 */
@Entity
@Table(name = "feedbacks", schema = "public", catalog = "defaultdb")
public class Feedbacks implements java.io.Serializable {

    private long id;
    private Questions questions;
    private Users usersByUserId;
    private Users usersByReviewedBy;
    private String content;
    private String status;
    private Timestamp createdAt;
    private Timestamp reviewedAt;

    public Feedbacks() {
    }

    public Feedbacks(long id, String content, String status, Timestamp createdAt) {
        this.id = id;
        this.content = content;
        this.status = status;
        this.createdAt = createdAt;
    }

    public Feedbacks(long id, Questions questions, Users usersByUserId, Users usersByReviewedBy, String content,
            String status, Timestamp createdAt, Timestamp reviewedAt) {
        this.id = id;
        this.questions = questions;
        this.usersByUserId = usersByUserId;
        this.usersByReviewedBy = usersByReviewedBy;
        this.content = content;
        this.status = status;
        this.createdAt = createdAt;
        this.reviewedAt = reviewedAt;
    }

    @Id

    @Column(name = "id", unique = true, nullable = false)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "question_id")
    public Questions getQuestions() {
        return this.questions;
    }

    public void setQuestions(Questions questions) {
        this.questions = questions;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "user_id")
    public Users getUsersByUserId() {
        return this.usersByUserId;
    }

    public void setUsersByUserId(Users usersByUserId) {
        this.usersByUserId = usersByUserId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "reviewed_by")
    public Users getUsersByReviewedBy() {
        return this.usersByReviewedBy;
    }

    public void setUsersByReviewedBy(Users usersByReviewedBy) {
        this.usersByReviewedBy = usersByReviewedBy;
    }

    @Column(name = "content", nullable = false)
    public String getContent() {
        return this.content;
    }

    public void setContent(String content) {
        this.content = content;
    }

    @Column(name = "status", nullable = false)
    public String getStatus() {
        return this.status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created_at", nullable = false, length = 35)
    public Timestamp getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(Timestamp createdAt) {
        this.createdAt = createdAt;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "reviewed_at", length = 35)
    public Timestamp getReviewedAt() {
        return this.reviewedAt;
    }

    public void setReviewedAt(Timestamp reviewedAt) {
        this.reviewedAt = reviewedAt;
    }

}
