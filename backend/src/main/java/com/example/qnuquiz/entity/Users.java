package com.example.qnuquiz.entity;
// Generated Oct 12, 2025, 7:49:47â€¯PM by Hibernate Tools 7.1.3.Final

import java.sql.Timestamp;
import java.util.HashSet;
import java.util.Set;
import java.util.UUID;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.UniqueConstraint;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name = "users", schema = "public", catalog = "defaultdb", uniqueConstraints = @UniqueConstraint(columnNames = "username"))
public class Users implements java.io.Serializable {

    private UUID id;
    private String username;
    private String passwordHash;
    private String fullName;
    private String email;
    private String role;
    private String status;
    private Timestamp createdAt;
    private Timestamp updatedAt;
    private Set<Questions> questionses = new HashSet<Questions>(0);
    private Set<Exams> examses = new HashSet<Exams>(0);
    private Set<Feedbacks> feedbacksesForUserId = new HashSet<Feedbacks>(0);
    private Set<Students> studentses = new HashSet<Students>(0);
    private Set<Announcements> announcementses = new HashSet<Announcements>(0);
    private Set<Teachers> teacherses = new HashSet<Teachers>(0);
    private Set<MediaFiles> mediaFileses = new HashSet<MediaFiles>(0);
    private Set<Classes> classeses = new HashSet<Classes>(0);
    private Set<Feedbacks> feedbacksesForReviewedBy = new HashSet<Feedbacks>(0);

    public Users() {
    }

    public Users(UUID id, String username, String passwordHash, String role, String status, Timestamp createdAt,
            Timestamp updatedAt) {
        this.id = id;
        this.username = username;
        this.passwordHash = passwordHash;
        this.role = role;
        this.status = status;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }

    public Users(UUID id, String username, String passwordHash, String fullName, String email, String role,
            String status, Timestamp createdAt, Timestamp updatedAt, Set<Questions> questionses, Set<Exams> examses,
            Set<Feedbacks> feedbacksesForUserId, Set<Students> studentses, Set<Announcements> announcementses,
            Set<Teachers> teacherses, Set<MediaFiles> mediaFileses, Set<Classes> classeses,
            Set<Feedbacks> feedbacksesForReviewedBy) {
        this.id = id;
        this.username = username;
        this.passwordHash = passwordHash;
        this.fullName = fullName;
        this.email = email;
        this.role = role;
        this.status = status;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.questionses = questionses;
        this.examses = examses;
        this.feedbacksesForUserId = feedbacksesForUserId;
        this.studentses = studentses;
        this.announcementses = announcementses;
        this.teacherses = teacherses;
        this.mediaFileses = mediaFileses;
        this.classeses = classeses;
        this.feedbacksesForReviewedBy = feedbacksesForReviewedBy;
    }

    @Id

    @Column(name = "id", unique = true, nullable = false)
    public UUID getId() {
        return this.id;
    }

    public void setId(UUID id) {
        this.id = id;
    }

    @Column(name = "username", unique = true, nullable = false, length = 128)
    public String getUsername() {
        return this.username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    @Column(name = "password_hash", nullable = false, length = 255)
    public String getPasswordHash() {
        return this.passwordHash;
    }

    public void setPasswordHash(String passwordHash) {
        this.passwordHash = passwordHash;
    }

    @Column(name = "full_name", length = 256)
    public String getFullName() {
        return this.fullName;
    }

    public void setFullName(String fullName) {
        this.fullName = fullName;
    }

    @Column(name = "email", length = 256)
    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    @Column(name = "role", nullable = false, length = 255)
    public String getRole() {
        return this.role;
    }

    public void setRole(String role) {
        this.role = role;
    }

    @Column(name = "status", nullable = false, length = 255)
    public String getStatus() {
        return this.status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created_at", nullable = false, length = 35)
    public Timestamp getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(Timestamp createdAt) {
        this.createdAt = createdAt;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "updated_at", nullable = false, length = 35)
    public Timestamp getUpdatedAt() {
        return this.updatedAt;
    }

    public void setUpdatedAt(Timestamp updatedAt) {
        this.updatedAt = updatedAt;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
    public Set<Questions> getQuestionses() {
        return this.questionses;
    }

    public void setQuestionses(Set<Questions> questionses) {
        this.questionses = questionses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
    public Set<Exams> getExamses() {
        return this.examses;
    }

    public void setExamses(Set<Exams> examses) {
        this.examses = examses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usersByUserId")
    public Set<Feedbacks> getFeedbacksesForUserId() {
        return this.feedbacksesForUserId;
    }

    public void setFeedbacksesForUserId(Set<Feedbacks> feedbacksesForUserId) {
        this.feedbacksesForUserId = feedbacksesForUserId;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
    public Set<Students> getStudentses() {
        return this.studentses;
    }

    public void setStudentses(Set<Students> studentses) {
        this.studentses = studentses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
    public Set<Announcements> getAnnouncementses() {
        return this.announcementses;
    }

    public void setAnnouncementses(Set<Announcements> announcementses) {
        this.announcementses = announcementses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
    public Set<Teachers> getTeacherses() {
        return this.teacherses;
    }

    public void setTeacherses(Set<Teachers> teacherses) {
        this.teacherses = teacherses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
    public Set<MediaFiles> getMediaFileses() {
        return this.mediaFileses;
    }

    public void setMediaFileses(Set<MediaFiles> mediaFileses) {
        this.mediaFileses = mediaFileses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
    public Set<Classes> getClasseses() {
        return this.classeses;
    }

    public void setClasseses(Set<Classes> classeses) {
        this.classeses = classeses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usersByReviewedBy")
    public Set<Feedbacks> getFeedbacksesForReviewedBy() {
        return this.feedbacksesForReviewedBy;
    }

    public void setFeedbacksesForReviewedBy(Set<Feedbacks> feedbacksesForReviewedBy) {
        this.feedbacksesForReviewedBy = feedbacksesForReviewedBy;
    }

}
