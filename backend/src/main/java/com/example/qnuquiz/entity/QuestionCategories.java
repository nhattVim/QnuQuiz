package com.example.qnuquiz.entity;
// Generated Oct 12, 2025, 7:49:47â€¯PM by Hibernate Tools 7.1.3.Final

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.UniqueConstraint;
import java.sql.Timestamp;
import java.util.HashSet;
import java.util.Set;

/**
 * QuestionCategories generated by hbm2java
 */
@Entity
@Table(name = "question_categories", schema = "public", catalog = "defaultdb", uniqueConstraints = @UniqueConstraint(columnNames = "name"))
public class QuestionCategories implements java.io.Serializable {

    private long id;
    private String name;
    private String description;
    private Timestamp createdAt;
    private Set<Questions> questionses = new HashSet<Questions>(0);

    public QuestionCategories() {
    }

    public QuestionCategories(long id, String name, Timestamp createdAt) {
        this.id = id;
        this.name = name;
        this.createdAt = createdAt;
    }

    public QuestionCategories(long id, String name, String description, Timestamp createdAt,
            Set<Questions> questionses) {
        this.id = id;
        this.name = name;
        this.description = description;
        this.createdAt = createdAt;
        this.questionses = questionses;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @Column(name = "name", unique = true, nullable = false, length = 256)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "description")
    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created_at", nullable = false, length = 35)
    public Timestamp getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(Timestamp createdAt) {
        this.createdAt = createdAt;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "questionCategories")
    public Set<Questions> getQuestionses() {
        return this.questionses;
    }

    public void setQuestionses(Set<Questions> questionses) {
        this.questionses = questionses;
    }

}
