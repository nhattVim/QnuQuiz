package com.example.qnuquiz.entity;
// Generated Oct 12, 2025, 7:49:47â€¯PM by Hibernate Tools 7.1.3.Final

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.HashSet;
import java.util.Set;

/**
 * ExamAttempts generated by hbm2java
 */
@Entity
@Table(name = "exam_attempts", schema = "public", catalog = "defaultdb")
public class ExamAttempts implements java.io.Serializable {

    private long id;
    private Students students;
    private Exams exams;
    private Timestamp startTime;
    private Timestamp endTime;
    private BigDecimal score;
    private boolean submitted;
    private Timestamp createdAt;
    private Set<ExamAnswers> examAnswerses = new HashSet<ExamAnswers>(0);

    public ExamAttempts() {
    }

    public ExamAttempts(long id, Timestamp startTime, boolean submitted, Timestamp createdAt) {
        this.id = id;
        this.startTime = startTime;
        this.submitted = submitted;
        this.createdAt = createdAt;
    }

    public ExamAttempts(long id, Students students, Exams exams, Timestamp startTime, Timestamp endTime,
            BigDecimal score, boolean submitted, Timestamp createdAt, Set<ExamAnswers> examAnswerses) {
        this.id = id;
        this.students = students;
        this.exams = exams;
        this.startTime = startTime;
        this.endTime = endTime;
        this.score = score;
        this.submitted = submitted;
        this.createdAt = createdAt;
        this.examAnswerses = examAnswerses;
    }

    @Id

    @Column(name = "id", unique = true, nullable = false)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "student_id")
    public Students getStudents() {
        return this.students;
    }

    public void setStudents(Students students) {
        this.students = students;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "exam_id")
    public Exams getExams() {
        return this.exams;
    }

    public void setExams(Exams exams) {
        this.exams = exams;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "start_time", nullable = false, length = 35)
    public Timestamp getStartTime() {
        return this.startTime;
    }

    public void setStartTime(Timestamp startTime) {
        this.startTime = startTime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "end_time", length = 35)
    public Timestamp getEndTime() {
        return this.endTime;
    }

    public void setEndTime(Timestamp endTime) {
        this.endTime = endTime;
    }

    @Column(name = "score", precision = 8, scale = 3)
    public BigDecimal getScore() {
        return this.score;
    }

    public void setScore(BigDecimal score) {
        this.score = score;
    }

    @Column(name = "submitted", nullable = false)
    public boolean isSubmitted() {
        return this.submitted;
    }

    public void setSubmitted(boolean submitted) {
        this.submitted = submitted;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created_at", nullable = false, length = 35)
    public Timestamp getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(Timestamp createdAt) {
        this.createdAt = createdAt;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "examAttempts")
    public Set<ExamAnswers> getExamAnswerses() {
        return this.examAnswerses;
    }

    public void setExamAnswerses(Set<ExamAnswers> examAnswerses) {
        this.examAnswerses = examAnswerses;
    }

}
