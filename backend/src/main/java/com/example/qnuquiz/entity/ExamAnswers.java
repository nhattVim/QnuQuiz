package com.example.qnuquiz.entity;
// Generated Oct 12, 2025, 7:49:47â€¯PM by Hibernate Tools 7.1.3.Final

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import java.sql.Timestamp;

/**
 * ExamAnswers generated by hbm2java
 */
@Entity
@Table(name = "exam_answers", schema = "public", catalog = "defaultdb")
public class ExamAnswers implements java.io.Serializable {

    private long id;
    private ExamAttempts examAttempts;
    private QuestionOptions questionOptions;
    private Questions questions;
    private Boolean isCorrect;
    private String answerText;
    private Timestamp createdAt;

    public ExamAnswers() {
    }

    public ExamAnswers(long id, ExamAttempts examAttempts, Questions questions, Timestamp createdAt) {
        this.id = id;
        this.examAttempts = examAttempts;
        this.questions = questions;
        this.createdAt = createdAt;
    }

    public ExamAnswers(long id, ExamAttempts examAttempts, QuestionOptions questionOptions, Questions questions,
            Boolean isCorrect, String answerText, Timestamp createdAt) {
        this.id = id;
        this.examAttempts = examAttempts;
        this.questionOptions = questionOptions;
        this.questions = questions;
        this.isCorrect = isCorrect;
        this.answerText = answerText;
        this.createdAt = createdAt;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "attempt_id", nullable = false)
    public ExamAttempts getExamAttempts() {
        return this.examAttempts;
    }

    public void setExamAttempts(ExamAttempts examAttempts) {
        this.examAttempts = examAttempts;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "selected_option_id")
    public QuestionOptions getQuestionOptions() {
        return this.questionOptions;
    }

    public void setQuestionOptions(QuestionOptions questionOptions) {
        this.questionOptions = questionOptions;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "question_id", nullable = false)
    public Questions getQuestions() {
        return this.questions;
    }

    public void setQuestions(Questions questions) {
        this.questions = questions;
    }

    @Column(name = "is_correct")
    public Boolean getIsCorrect() {
        return this.isCorrect;
    }

    public void setIsCorrect(Boolean isCorrect) {
        this.isCorrect = isCorrect;
    }

    @Column(name = "answer_text")
    public String getAnswerText() {
        return this.answerText;
    }

    public void setAnswerText(String answerText) {
        this.answerText = answerText;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created_at", nullable = false, length = 35)
    public Timestamp getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(Timestamp createdAt) {
        this.createdAt = createdAt;
    }

}
