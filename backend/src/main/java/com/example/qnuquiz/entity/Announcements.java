package com.example.qnuquiz.entity;
// Generated Oct 12, 2025, 7:49:47â€¯PM by Hibernate Tools 7.1.3.Final

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import java.sql.Timestamp;

/**
 * Announcements generated by hbm2java
 */
@Entity
@Table(name = "announcements", schema = "public", catalog = "defaultdb")
public class Announcements implements java.io.Serializable {

    private long id;
    private Classes classes;
    private Users users;
    private Departments departments;
    private String title;
    private String content;
    private String target;
    private Timestamp publishedAt;
    private Timestamp createdAt;

    public Announcements() {
    }

    public Announcements(long id, String title, String content, String target, Timestamp publishedAt,
            Timestamp createdAt) {
        this.id = id;
        this.title = title;
        this.content = content;
        this.target = target;
        this.publishedAt = publishedAt;
        this.createdAt = createdAt;
    }

    public Announcements(long id, Classes classes, Users users, Departments departments, String title, String content,
            String target, Timestamp publishedAt, Timestamp createdAt) {
        this.id = id;
        this.classes = classes;
        this.users = users;
        this.departments = departments;
        this.title = title;
        this.content = content;
        this.target = target;
        this.publishedAt = publishedAt;
        this.createdAt = createdAt;
    }

    @Id

    @Column(name = "id", unique = true, nullable = false)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "target_class_id")
    public Classes getClasses() {
        return this.classes;
    }

    public void setClasses(Classes classes) {
        this.classes = classes;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "author_id")
    public Users getUsers() {
        return this.users;
    }

    public void setUsers(Users users) {
        this.users = users;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "target_department_id")
    public Departments getDepartments() {
        return this.departments;
    }

    public void setDepartments(Departments departments) {
        this.departments = departments;
    }

    @Column(name = "title", nullable = false, length = 256)
    public String getTitle() {
        return this.title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    @Column(name = "content", nullable = false)
    public String getContent() {
        return this.content;
    }

    public void setContent(String content) {
        this.content = content;
    }

    @Column(name = "target", nullable = false)
    public String getTarget() {
        return this.target;
    }

    public void setTarget(String target) {
        this.target = target;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "published_at", nullable = false, length = 35)
    public Timestamp getPublishedAt() {
        return this.publishedAt;
    }

    public void setPublishedAt(Timestamp publishedAt) {
        this.publishedAt = publishedAt;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created_at", nullable = false, length = 35)
    public Timestamp getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(Timestamp createdAt) {
        this.createdAt = createdAt;
    }

}
