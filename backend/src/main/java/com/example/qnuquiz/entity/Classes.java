package com.example.qnuquiz.entity;
// Generated Oct 12, 2025, 7:49:47â€¯PM by Hibernate Tools 7.1.3.Final

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.UniqueConstraint;
import java.sql.Timestamp;
import java.util.HashSet;
import java.util.Set;

/**
 * Classes generated by hbm2java
 */
@Entity
@Table(name = "classes", schema = "public", catalog = "defaultdb", uniqueConstraints = @UniqueConstraint(columnNames = {
        "name", "department_id" }))
public class Classes implements java.io.Serializable {

    private long id;
    private Users users;
    private Departments departments;
    private String name;
    private Timestamp createdAt;
    private Set<Announcements> announcementses = new HashSet<Announcements>(0);
    private Set<Students> studentses = new HashSet<Students>(0);

    public Classes() {
    }

    public Classes(long id, String name, Timestamp createdAt) {
        this.id = id;
        this.name = name;
        this.createdAt = createdAt;
    }

    public Classes(long id, Users users, Departments departments, String name, Timestamp createdAt,
            Set<Announcements> announcementses, Set<Students> studentses) {
        this.id = id;
        this.users = users;
        this.departments = departments;
        this.name = name;
        this.createdAt = createdAt;
        this.announcementses = announcementses;
        this.studentses = studentses;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "advisor_teacher_id")
    public Users getUsers() {
        return this.users;
    }

    public void setUsers(Users users) {
        this.users = users;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "department_id")
    public Departments getDepartments() {
        return this.departments;
    }

    public void setDepartments(Departments departments) {
        this.departments = departments;
    }

    @Column(name = "name", nullable = false, length = 128)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created_at", nullable = false, length = 35)
    public Timestamp getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(Timestamp createdAt) {
        this.createdAt = createdAt;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "classes")
    public Set<Announcements> getAnnouncementses() {
        return this.announcementses;
    }

    public void setAnnouncementses(Set<Announcements> announcementses) {
        this.announcementses = announcementses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "classes")
    public Set<Students> getStudentses() {
        return this.studentses;
    }

    public void setStudentses(Set<Students> studentses) {
        this.studentses = studentses;
    }

}
